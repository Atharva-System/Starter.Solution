@page "/projectlist"
@using Starter.Blazor.Modules.Common
@using Starter.Blazor.Modules.Projects.Models
@using Starter.Blazor.Modules.Projects.Services
@inject IProjectService ProjectService
@inject IJSRuntime JSRuntime

<div class="panel h-full w-full">
    <div class="mb-5 flex items-center justify-between">
        <h5 class="text-lg font-semibold dark:text-white-light">Projects</h5>

        <button type="button" class="btn btn-primary" @click="toggle">Add Project</button>

    </div>
    
    <div class="table-responsive">
        <table>
            <thead>
                <tr>
                    <th class="ltr:rounded-l-md rtl:rounded-r-md">Name</th>
                    <th>Description</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Hours</th>
                    <th class="ltr:rounded-r-md rtl:rounded-l-md">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var project in projects)
                {
                    <tr class="group text-white-dark hover:text-black dark:hover:text-white-light/90">
                        <td class="min-w-[150px] text-black dark:text-white">
                            @project.ProjectName
                        </td>
                        <td class="text-dark">@project.Description</td>
                        <td class="text-dark">@project.StartDateDisplay</td>
                        <td class="text-dark">@project.EndDateDisplay</td>
                        <td class="text-dark">@project.EstimatedHours</td>
                        <td>
                            <div x-data="deletemodal">
                                <!-- button -->
                                <div>
                                    <button type="button" class="btn btn-outline-danger" @click="toggle">Delete</button>
                                </div>

                                <!--delete modal -->
                                <div class="fixed inset-0 bg-[black]/60 z-[999] hidden overflow-y-auto" :class="dopen && '!block'">
                                    <div class="flex items-center justify-center min-h-screen px-4">
                                        <div x-show="dopen" x-transition x-transition.duration.300 class="panel border-0 p-0 rounded-lg overflow-hidden w-full max-w-lg my-8">
                                            <div class="flex bg-[#fbfbfb] dark:bg-[#121c2c] items-center justify-between px-5 py-3">
                                                <h5 class="font-bold text-lg">Delete Project</h5>
                                                <button type="button" class="text-white-dark hover:text-dark" @click="toggle">
                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                         width="24px"
                                                         height="24px"
                                                         viewBox="0 0 24 24"
                                                         fill="none"
                                                         stroke="currentColor"
                                                         stroke-width="1.5"
                                                         stroke-linecap="round"
                                                         stroke-linejoin="round"
                                                         class="h-6 w-6">
                                                        <line x1="18" y1="6" x2="6" y2="18"></line>
                                                        <line x1="6" y1="6" x2="18" y2="18"></line>
                                                    </svg>
                                                </button>
                                            </div>
                                            <div class="p-5 mb-5 text-center">
                                                <div class="mx-auto w-fit rounded-full bg-danger p-4 text-white ring-4 ring-danger/30">
                                                    <svg width="24"
                                                         height="24"
                                                         viewBox="0 0 24 24"
                                                         fill="none"
                                                         xmlns="http://www.w3.org/2000/svg"
                                                         class="mx-auto h-7 w-7">
                                                        <path d="M20.5001 6H3.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                                        <path d="M18.8334 8.5L18.3735 15.3991C18.1965 18.054 18.108 19.3815 17.243 20.1907C16.378 21 15.0476 21 12.3868 21H11.6134C8.9526 21 7.6222 21 6.75719 20.1907C5.89218 19.3815 5.80368 18.054 5.62669 15.3991L5.16675 8.5"
                                                              stroke="currentColor"
                                                              stroke-width="1.5"
                                                              stroke-linecap="round"></path>
                                                        <path opacity="0.5"
                                                              d="M9.5 11L10 16"
                                                              stroke="currentColor"
                                                              stroke-width="1.5"
                                                              stroke-linecap="round"></path>
                                                        <path opacity="0.5"
                                                              d="M14.5 11L14 16"
                                                              stroke="currentColor"
                                                              stroke-width="1.5"
                                                              stroke-linecap="round"></path>
                                                        <path opacity="0.5"
                                                              d="M6.5 6C6.55588 6 6.58382 6 6.60915 5.99936C7.43259 5.97849 8.15902 5.45491 8.43922 4.68032C8.44784 4.65649 8.45667 4.62999 8.47434 4.57697L8.57143 4.28571C8.65431 4.03708 8.69575 3.91276 8.75071 3.8072C8.97001 3.38607 9.37574 3.09364 9.84461 3.01877C9.96213 3 10.0932 3 10.3553 3H13.6447C13.9068 3 14.0379 3 14.1554 3.01877C14.6243 3.09364 15.03 3.38607 15.2493 3.8072C15.3043 3.91276 15.3457 4.03708 15.4286 4.28571L15.5257 4.57697C15.5433 4.62992 15.5522 4.65651 15.5608 4.68032C15.841 5.45491 16.5674 5.97849 17.3909 5.99936C17.4162 6 17.4441 6 17.5 6"
                                                              stroke="currentColor"
                                                              stroke-width="1.5"></path>
                                                    </svg>
                                                </div>
                                                <div class="dark:text-white-dark/70 text-base font-medium text-[#1f2937] pt-5">
                                                    <p>Are you sure, You want to delete this project?</p>
                                                    <p>Project Name: @project.ProjectName</p>

                                                </div>
                                                <div class="flex justify-center items-center mt-8">
                                                    <button type="button" class="btn btn-outline-danger" @click="toggle">Cancel</button>
                                                    <button type="button" class="btn btn-primary ltr:ml-4 rtl:mr-4" @onclick="() => DeleteProject(project)">Delete</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                        
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>
<script>
    function deletemodal() {
        return {
            dopen: false,
            toggle() {
                this.dopen = !this.dopen;
            },

        };
    }
</script>
@code {
    private List<ProjectDto> projects = new List<ProjectDto>();

    private PaginationRequest param = new PaginationRequest { PageNumber = 0, PageSize = 10, OrderBy = new[] { "projectName" } };
    private readonly string toastScriptConstant = @"
        const toast = window.Swal.mixin({
            toast: true,
            position: 'top',
            showConfirmButton: false,
            timer: 3000,
            showCloseButton: true,
        });";
    protected override async Task OnInitializedAsync()
    {
        projects = await ProjectService.GetProjectlistsAsync(param);
    }
    private async Task DeleteProject(ProjectDto project)
    {
        var result = await ProjectService.DeleteProject(project);

        if (result.Success)
        {
            showToaster(result.Data, "top");
            projects = await ProjectService.GetProjectlistsAsync(param);
            StateHasChanged();
        }
        else
        {
            showToaster(result.Messages.FirstOrDefault(), "top");
        }
    }
    private void showToaster(string msg, string position)
    {
        string toastScript = $"{toastScriptConstant} toast.fire({{ title: '{msg}' }});";
        JSRuntime.InvokeVoidAsync("eval", toastScript);
    }
}
