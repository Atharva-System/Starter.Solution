@page "/userlist"
@using Starter.Blazor.Modules.Common
@using Starter.Blazor.Modules.User.Models
@using Starter.Blazor.Modules.User.Services
@inject IUserService UserService

<div class="panel h-full w-full">
    <div class="mb-5 flex items-center justify-between">
        <h5 class="text-lg font-semibold dark:text-white-light">Users List</h5>
    </div>
    <div class="table-responsive">
        <table>
            <thead>
                <tr>
                    <th class="ltr:rounded-l-md rtl:rounded-r-md">Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Status</th>
                    <th class="ltr:rounded-r-md rtl:rounded-l-md">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var user in users)
                {
                    <tr class="group text-white-dark hover:text-black dark:hover:text-white-light/90">
                        <td class="min-w-[150px] text-black dark:text-white">
                            <div class="flex items-center">
                                <img class="h-8 w-8 rounded-md object-cover ltr:mr-3 rtl:ml-3"
                                     src="assets/images/profile-6.jpeg"
                                     alt="avatar" />
                                <span class="whitespace-nowrap">@user.FullName</span>
                            </div>
                        </td>
                        <td>@user.Email</td>
                        <td class="text-primary">@user.Role</td>
                        <td>
                            <span class="badge @(user.Status == "Active" ? "bg-success" : "bg-secondary") shadow-md dark:group-hover:bg-transparent">
                                @user.Status
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div x-data="modal">
    <!-- button -->
    <button type="button" class="btn btn-primary" @click="toggle">Invite User</button>

    <!-- modal -->
    <div class="fixed inset-0 bg-[black]/60 z-[999] hidden overflow-y-auto" :class="open && '!block'">
        <div class="flex items-start justify-center min-h-screen px-4">
            <div x-show="open" x-transition x-transition.duration.300 class="panel border-0 py-1 px-4 rounded-lg overflow-hidden w-full max-w-sm my-8">
                <div class="flex items-center justify-between p-5 font-semibold text-lg dark:text-white">
                    Invite User
                    @* <button type="button" @click="toggle" class="text-white-dark hover:text-dark">
                    </button> *@
                </div>
                <div class="p-5">
                    <form @onsubmit="InviteUser">
                        <div class="relative mb-4">
                            <input type="text" placeholder="First Name" class="form-input" @bind="inviteUser.FirstName" />
                        </div>
                        <div class="relative mb-4">
                            <input type="text" placeholder="Last Name" class="form-input" @bind="inviteUser.LastName" />
                        </div>
                        <div class="relative mb-4">
                            <input type="email" placeholder="Email" class="form-input" @bind="inviteUser.Email" />
                        </div>
                        <button type="submit" class="btn btn-primary w-full">Invite</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<UserlistDto> users = new List<UserlistDto>();
    private PaginationRequest param  = new PaginationRequest { PageNumber = 0, PageSize = 10, OrderBy = new[] { "FullName" }};
    private InviteUserDto inviteUser = new InviteUserDto(); 
   
    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUserlistsAsync(param);
    }

    private async Task InviteUser()
    {
        var result = await UserService.InviteUserAsync(inviteUser);
    }
}
