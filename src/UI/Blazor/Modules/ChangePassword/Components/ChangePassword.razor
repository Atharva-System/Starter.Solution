@page "/ChangePassword"
@using Starter.Blazor.Modules.ChangePassword.Model
@using Starter.Blazor.Modules.ChangePassword.Services
@inject IChangePasswordServices ChangePasswordServices

<div class="animate__animated p-6" :class="[$store.app.animation]">
    <!-- start main content section -->
    <div>
        <ul class="flex space-x-2 rtl:space-x-reverse">
            <li>
                <a href="javascript:;" class="text-primary hover:underline">Users</a>
            </li>
            <li class="before:content-['/'] ltr:before:mr-1 rtl:before:ml-1">
                <span>Change Password</span>
            </li>
        </ul>
        <div class="pt-5">
            <div>
                <div>
                    <EditForm class="mb-5 rounded-md border border-[#ebedf2] bg-white p-4 dark:border-[#191e3a] dark:bg-[#0e1726]" Model="@ChangePasswordRequest" OnValidSubmit="HandleChangePassword">
                        <DataAnnotationsValidator />
                        <p>@message</p>
                        <h6 class="mb-5 text-lg font-bold">Change Password</h6>
                        <div class="flex flex-col sm:flex-row">
                            <div class="grid flex-1 grid-cols-1 gap-5 sm:grid-cols-2">
                                <div>
                                    <label for="name">Current Password</label>
                                    <InputText id="CurrentPassword" type="password" placeholder="Current Password" class="form-input" @bind-Value="ChangePasswordRequest.CurrentPassword" />
                                    <ValidationMessage For="@(() => ChangePasswordRequest.CurrentPassword)" />
                                </div>
                                <div>
                                    <label for="profession">New Password</label>
                                    <InputText id="NewPassword" type="password" placeholder="New Password" class="form-input" @bind-Value="ChangePasswordRequest.NewPassword" />
                                    <ValidationMessage For="@(() => ChangePasswordRequest.NewPassword)" />
                                </div>
                                <div>
                                    <label for="profession">Confirm Password</label>
                                    <InputText id="NewPassword" type="password" placeholder="Confirm Password" class="form-input" @bind-Value="ChangePasswordRequest.ConfirmPassword" />
                                    <ValidationMessage For="@(() => ChangePasswordRequest.ConfirmPassword)" />
                                </div>
                                <div class="mt-3 sm:col-span-2">
                                    <button type="submit" class="btn btn-primary w-full">Change Password</button>
                                </div>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ChangePasswordRequest ChangePasswordRequest = new ChangePasswordRequest();
    private string message = "";
    private async Task HandleChangePassword()
    {
        var response = await ChangePasswordServices.ChangePasswordAsync(ChangePasswordRequest);
        if (response != null)
        {
            message = "Password Updated Sucessfully";
        }
    }
}
