<thead>
    <tr>
        @foreach (var item in HeaderInfo)
        {
            <th data-sortable="" style="width: 10.3537%;" class="@item["SorderOrder"]" @onclick="() => ColumnSorting(item)">
                <a href="#" class="@((item.ContainsKey("ShowSorting") && Convert.ToBoolean(item["ShowSorting"])) ? "dataTable-sorter" : "")">@item["Name"]</a>
                <!-- buttons with dropdowns -->
                @if (item.ContainsKey("ShowFilter") && Convert.ToBoolean(item["ShowFilter"]))
                {
                    <form>
                        <div x-data="dropdown" class="dropdown">
                        <div class="flex">
                            <input id="dropdownRight" type="text" placeholder="" class="form-input ltr:rounded-r-none rtl:rounded-l-none" />
                            <div  class="flex items-center justify-center border border-[#e0e6ed] bg-[#eee] px-3 font-semibold ltr:rounded-r-md ltr:border-l-0 rtl:rounded-l-md rtl:border-r-0 dark:border-[#17263c] dark:bg-[#1b2e4b]" @click="toggle" @click.outside="open = false">
                                <button type="button"><icon-filter class="bh-w-4"><!----></icon-filter><svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="1.5" fill="none" stroke-linecap="round" stroke-linejoin="round" class="bh-w-4 ng-star-inserted"><polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon></svg><!----></button>
                            </div>
                        </div>
                        <ul x-show="open" x-transition="" x-transition.duration.300ms="" class="ltr:right-0 rtl:left-0">
                            <li><a href="javascript:;" style="font-weight:100 !important" @click="toggle">No Filter</a></li>
                            <li><a href="javascript:;" style="font-weight:100 !important"  @click="toggle">Contain</a></li>
                            <li><a href="javascript:;" style="font-weight:100 !important" @click="toggle">Not Contain</a></li>
                            <li><a href="javascript:;" style="font-weight:100 !important" @click="toggle">Equal</a></li>
                            <li><a href="javascript:;" style="font-weight:100 !important" @click="toggle">Not Equal</a></li>
                            <li><a href="javascript:;" style="font-weight:100 !important" @click="toggle">Starts With</a></li>
                            <li><a href="javascript:;" style="font-weight:100 !important" @click="toggle">Ends With</a></li>
                            <li><a href="javascript:;" style="font-weight:100 !important" @click="toggle">Is null</a></li>
                            <li><a href="javascript:;" style="font-weight:100 !important" @click="toggle">Not null</a></li>
                        </ul>
                    </div>
                </form>
                }
            </th>
        }
    </tr>
</thead>
<script>
    document.addEventListener("alpine:init", () => {
        Alpine.data("dropdown", (initialOpenState = false) => ({
            open: initialOpenState,

            toggle() {
                this.open = !this.open;
            },
        }));
    });
</script>
@code {
    [Parameter] public List<Dictionary<string, string>> HeaderInfo { get; set; }

    private async Task ColumnSorting(Dictionary<string, string> item)
    {
        if (Convert.ToBoolean(item["ShowSorting"]) == true)
        {
            if (item["SorderOrder"] == "asc")
            {
                item["SorderOrder"] = "desc";
            }
            else
            {
                item["SorderOrder"] = "asc";
            }
        }
    }
}
